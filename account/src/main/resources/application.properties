spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
server.port=8080

spring.application.name=account
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:8071/

management.endpoints.web.exposure.include=*
# To expose refresh url to refresh certain properties without restarting the API
#management.endpoints.enabled-by-default=true

eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/
# To connect to eureka Server
eureka.instance.preferIpAddress = true
# This is to register this microservice by ip address cause in containerization world it will keep on changing
eureka.client.registerWithEureka = true
# Register with eureka when it starts
eureka.client.fetchRegistry = true
# Fetch all the registry present in the eureka server when we are connecting with it
## Configuring info endpoint
info.app.name=Accounts Microservice
info.app.description=Abhishek Sharma Bank Accounts Application
info.app.version=1.0.0

endpoints.shutdown.enabled=true
# This is to shutdown my service i grace manner
management.endpoint.shutdown.enabled=true
# This is to enable the above feature

resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.waitDurationInOpenState= 30000
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permittedNumberOfCallsInHalfOpenState=2

resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.retryForCustomerDetails.maxRetryAttempts=3
resilience4j.retry.instances.retryForCustomerDetails.waitDuration=2000

resilience4j.ratelimiter.configs.default.registerHealthIndicator= true
resilience4j.ratelimiter.instances.sayHello.timeoutDuration=5000
resilience4j.ratelimiter.instances.sayHello.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.sayHello.limitForPeriod=1

spring.sleuth.sampler.percentage=1
# no of percentage of logs
spring.zipkin.baseUrl=http://localhost:9411/
#spring.zipkin.sender.type=rabbit
#spring.zipkin.rabbitmq.queue=zipkin
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest